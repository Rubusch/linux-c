# circle ci config (github)
version: 2.1
jobs:
  build:
    docker:
      - image: ubuntu:22.04

    steps:
      - run:
          name: Greeting
          command: echo Hello, world.

      - run:
          name: Installing BUILD-ESSENTIAL
          command: 'apt-get update && apt-get install -y build-essential'

      - run:
          name: Install kernel sources
          command: 'apt-get update && apt-get install -y linux-headers-6.3.0'

      - run:
          name: Installing GIT
          environment:
            TZ: "America/Los_Angeles"
            DEBIAN_FRONTEND: "noninteractive"
          command: 'apt-get update && apt-get install -y git'

      - run:
          name: Installing GCC
          command: 'apt-get update && apt-get install -y gcc-12'

      - checkout

## preparations
      - run:
          name: Preparations
          command: |
              mkdir -p /lib/modules/$(uname -r)
              cd /lib/modules/$(uname -r)
              ln -s /lib/modules/6.1.0-1010-oem/build build

## basics
      - run: cd 010__basics/basics01__hello && make
      - run: cd 010__basics/basics02__hello && make
      - run: cd 010__basics/basics03__hello && make
      - run: cd 010__basics/basics04__hello_module_init_arguments && make
      - run: cd 010__basics/basics05__hello_module_init_arguments && make
      - run: cd 010__basics/basics06__hello_multiple_files && make
      - run: cd 010__basics/basics07__hello_chardev_driver && make
      - run: cd 010__basics/basics08__hello_procfs_read && make
      - run: cd 010__basics/basics09__hello_procfs_read_write && make
      - run: cd 010__basics/basics10__hello_procfs_fops && make
      - run: cd 010__basics/basics11__hello_procfs_seq_filesystem && make
      - run: cd 010__basics/basics12__hello-with-timing && KERNELDIR=/lib/modules/$(uname -r)/build ARCH=x86 CROSS_COMPILE=" " make
      - run: cd 010__basics/device__01_static_major_minor && make
      - run: cd 010__basics/device__02_dynamic_major_minor && make
      - run: cd 010__basics/kbuild__symbol_export_to_another_module && make
      - run: cd 010__basics/types && KERNELDIR=/lib/modules/$(uname -r)/build ARCH=x86 CROSS_COMPILE=" " make

## chardev
      - run: cd 020__chardev/010__mknod && make
      - run: cd 020__chardev/012__devicefile && make
      - run: cd 020__chardev/013__devicefile_and_chardev && make
      - run: cd 020__chardev/014__devicefile_implemented && make
      - run: cd 020__chardev/020__linkedlist && make
      - run: cd 020__chardev/030__wait_on_events && make
      - run: cd 020__chardev/110__ioctl && make
      - run: cd 020__chardev/112__ioctl_string_disabled && make
      - run: cd 020__chardev/113__ioctl_signal && make
      - run: cd 020__chardev/120__ioctl_demo/module && KERNELDIR=/lib/modules/$(uname -r)/build ARCH=x86 CROSS_COMPILE=" " make
      - run: cd 020__chardev/121__using_devtmpfs_with_device_class/module && KERNELDIR=/lib/modules/$(uname -r)/build ARCH=x86 CROSS_COMPILE=" " make
      - run: cd 020__chardev/122__using_miscdevice/module && KERNELDIR=/lib/modules/$(uname -r)/build ARCH=x86 CROSS_COMPILE=" " make

## platform drivers and open firmware
      - run: cd 030__platform-devices/gpio__raspi4_led && make
      - run: cd 030__platform-devices/gpio__raspi4_interrupt && make
      - run: cd 030__platform-devices/020__chardev_with_dt_binding/module && KERNELDIR=/lib/modules/$(uname -r)/build ARCH=x86 CROSS_COMPILE=" " make
      - run: cd 030__platform-devices/021__leds_with_dt_binding/module && KERNELDIR=/lib/modules/$(uname -r)/build ARCH=x86 CROSS_COMPILE=" " make
      - run: cd 030__platform-devices/022__leds_with_dt_binding_and_class/module && KERNELDIR=/lib/modules/$(uname -r)/build ARCH=x86 CROSS_COMPILE=" " make
      - run: cd 030__platform-devices/030__uio_demo_with_leds/module && KERNELDIR=/lib/modules/$(uname -r)/build ARCH=x86 CROSS_COMPILE=" " make

## interrupts
      - run: cd 050__interrupts/interrupt && make
      - run: cd 050__interrupts/interrupt__workqueue01_kernel && make
      - run: cd 050__interrupts/interrupt__workqueue02_customized && make
      - run: cd 050__interrupts/interrupt__tasklet01 && make
      - run: cd 050__interrupts/interrupt__tasklet02__dynamic_alloc && make

## kthreads
      - run: cd 080__kthreads/kthread && make
      - run: cd 080__kthreads/kthread__atomic_operation && make
      - run: cd 080__kthreads/kthread__mutex && make
      - run: cd 080__kthreads/kthread__spinlock && make
      - run: cd 080__kthreads/kthread__rwlock && make
      - run: cd 080__kthreads/kthread__rcu && make
      - run: cd 080__kthreads/kthread__completion && make
      - run: cd 080__kthreads/kthread__completion_dynamic && make
      - run: cd 080__kthreads/kthread__seqlock && make

## misc
      - run: cd 100__misc/sysfs && make
      - run: cd 100__misc/timer && make
      - run: cd 100__misc/timer__hres_timer && make

## usb
      - run: cd 140__usb/usb__basic && make
      - run: cd 140__usb/usb__descriptors && make
